<?xml version="1.0" encoding="utf-8"?>
<!-- 
  Note: As an alternative to hand editing this file you can use the 
  web admin tool to configure settings for your application. Use
  the Website->Asp.Net Configuration option in Visual Studio.
  A full list of settings and comments can be found in 
  machine.config.comments usually located in 
  \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
      <section name="errorTweet" requirePermission="false" type="Elmah.ErrorTweetSectionHandler, Elmah" />
    </sectionGroup>
    <section name="glimpse" type="Glimpse.Core.Configuration.GlimpseConfiguration" />
  </configSections>
  <appSettings>
    <add key="SQLBackupLocation" value="C:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\Backup\BidForKids.bak" />
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
  </appSettings>
  <connectionStrings>
    <add name="ApplicationServices" connectionString="Data Source=localhost;Initial Catalog=BidForKids;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="BidsForKidsConnectionString" connectionString="Data Source=localhost;Initial Catalog=BidForKids;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="Simple.Data.Properties.Settings.DefaultConnectionString" connectionString="Data Source=localhost;Initial Catalog=BidForKids;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <elmah>
    <security allowRemoteAccess="1" />
    <!--
      Use to log errors to Microsoft SQL Server 2000 or 2005
      using ASP.NET 2.0. Set value of connectionStringName attribute
      to the name of the connection string settings to use from
      the <connectionStrings> section.
    
    <errorLog type="Elmah.SqlErrorLog, Elmah" 
      connectionStringName="..." />
    -->
    <!--
      Use to log errors to Microsoft SQL Server 2000 or 2005
      using ASP.NET 1.x and adjust the value of connectionString 
      attribute to your settings.

    <errorLog type="Elmah.SqlErrorLog, Elmah" 
      connectionString="Data Source=.;Initial Catalog=ELMAH;Trusted_Connection=True" />
    -->
    <!--
      Use to log errors to SQLite using ASP.NET 2.0. 
      Set value of connectionStringName attribute to 
      the name of the connection string settings to 
      use from the <connectionStrings> section.
      
    <errorLog type="Elmah.SQLiteErrorLog, Elmah" connectionStringName="..." />
    
      The format of the connection string should be as follows:
      
    <connectionStrings>
      <add name="..." connectionString="data source=[path to the database file]" />
    </connectionStrings>
      
      Replace the content of the brackets with a file name, for example:
      
    data source=C:\Elmah.db
      
      If the database file doesn't exist it is created automatically.
      To specify a path relative to and below the application root, 
      start with the root operator (~) followed by a forward slash (/), 
      as it is common in ASP.NET applications. For example:
      
    data source=~/App_Data/Error.db
    -->
    <!--
      Use to log errors into separate XML files that are stored on 
      disk at the path specified in the logPath attribute.
    -->
    <errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="C:\inetpub\wwwroot\BidsForKids\App_Data\logs" />
    <!--
      Use to log errors to Oracle
      using ASP.NET 2.0. Set value of connectionStringName attribute
      to the name of the connection string settings to use from
      the <connectionStrings> section.
    
      The schemaOwner parameter is *optional*. Use this if the owner of the
      ELMAH package (pkg_elmah$error) is not the same user that you are 
      using to connect to the database.
      
    <errorLog type="Elmah.OracleErrorLog, Elmah" 
      schemaOwner="xxx" />
      connectionStringName="..." />
    -->
    <!--
      Use to log errors to Oracle
      using ASP.NET 1.1 and adjust the value of connectionString 
      attribute to your settings.

      The schemaOwner parameter is *optional*. Use this if the owner of the
      ELMAH package (pkg_elmah$error) is not the same user that you are 
      using to connect to the database.

    <errorLog type="Elmah.OracleErrorLog, Elmah" 
      schemaOwner="xxx" />
      connectionString="Data Source=xxxx;User ID=username;Password=password" />
    -->
    <!--
      Use to log errors to Microsoft Access
      using ASP.NET 1.x and adjust the value of connectionString 
      attribute to your settings.
      Use Elmah.mdb as your database.

    <errorLog type="Elmah.AccessErrorLog, Elmah" 
      connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|Elmah.mdb" />
    -->
    <!--
      Use to log errors to Microsoft Access
      using ASP.NET 2.0. Set value of connectionStringName attribute
      to the name of the connection string settings to use from
      the <connectionStrings> section.
      Use Elmah.mdb as your database.
    
    <errorLog type="Elmah.AccessErrorLog, Elmah" 
      connectionStringName="..." />
    -->
    <!--
      Use to log errors to VistaDB Express
      using ASP.NET 2.0. Set value of connectionStringName attribute
      to the name of the connection string settings to use from
      the <connectionStrings> section.
    
    <errorLog type="Elmah.VistaDBErrorLog, Elmah" 
      connectionStringName="..." />

      The format of the connection string should be as follows:
      
    <connectionStrings>
      <add name="..." connectionString="Data Source='[path to the database file]';Open Mode=NonExclusiveReadWrite;Pooling=True" providerName="VistaDB.Provider" />
    </connectionStrings>
      
      Replace the content of the brackets with a file name, for example:
      
    Data Source='C:\Elmah.vdb3'
      
      If the database file doesn't exist it is created automatically.
      To specify a path relative to and below the application root, 
      start with the root operator (~) followed by a forward slash (/), 
      as it is common in ASP.NET applications. For example:
      
    Data Source='~/App_Data/Error.vdb3'
    
      You can also specify the App_Data directory using the
      |DataDirectory| macro. For example:
    
    Data Source='|DataDirectory|\Elmah.vdb3'
    
      Note the use of the Open Mode and Pooling parameters
    -->
    <!--
      Use to send error reports by e-mail and adjust the attributes
      according to settings desired. Note that only the from and
      to attributes are required. The rest are optional and may
      be removed. If the SMTP server does not require authentication,
      you MUST remove the userName and password attributes or
      set them to empty values (resulting in zero-length strings).
      If you are using ELMAH compiled for .NET Framework 1.x, then
      the to attribute may contain multiple recipient addresses,
      each of which must be delimited by a semi-colon(;). If you are 
      using ELMAH compiled for .NET Framework 2.0 or later, then the
      to attribute may contain multiple recipient addresses,
      each of which must be delimited by a comma (,).

    <errorMail 
      from="elmah@example.com" 
      to="admin@example.com" 
      subject="..."
      priority="Low|Normal|High"
      async="true|false"
      smtpPort="25"
      smtpServer="smtp.example.com" 
      useSsl="true|false"
      userName="johndoe"
      password="secret" 
      noYsod="true|false" />
    -->
    <!--
      Use to send short error messages to a twitter account.
    <errorTweet 
      userName="johndoe" 
      password="secret" />
    -->
    <!--
      Use to prevent errors from being mailed or logged based on
      assertions. An assertion evaluates the current context, resulting
      in a Boolean outcome. An error is filtered if the assertion results
      in true. For a more detailed explanation, see:
      
      http://code.google.com/p/elmah/wiki/ErrorFiltering
      
      The example below will filter errors when any of the
      following conditions occur:
      
      - The status code is set to 404 
      - The root/base cause is System.IO.FileNotFoundException
      - The root/base cause is System.Web.HttpRequestValidationException
      - The user agent making the request identifies itself as "crawler"
      - The request is from the local machine
      
      The assertion below is expressed as a JScript expression and is the
      most generic and simplest of the assertions to use if you are
      familiar with the JavaScript language. It can work in Medium and
      Full trust environments.

    <errorFilter>
      <test>
        <jscript>
          <expression>
          <![CDATA[
          // @assembly mscorlib
          // @assembly System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
          // @import System.IO
          // @import System.Web

          HttpStatusCode == 404
          || BaseException instanceof FileNotFoundException 
          || BaseException instanceof HttpRequestValidationException
          /* Using RegExp below (see http://msdn.microsoft.com/en-us/library/h6e2eb7w.aspx) */
          || Context.Request.UserAgent.match(/crawler/i)                      
          || Context.Request.ServerVariables['REMOTE_ADDR'] == '127.0.0.1' // IPv4 only
          ]]>
          </expression>
        </jscript>
      </test>
    </errorFilter>
    -->
  </elmah>
  <system.web>
    <!-- 
      Set compilation debug="true" to insert debugging 
      symbols into the compiled page. Because this 
      affects performance, set this value to true only 
      during development.
  -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
      The <authentication> section enables configuration 
      of the security authentication mode used by 
      ASP.NET to identify an incoming user. 
  -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" />
    </authentication>
    <membership>
      <providers>
        <clear />
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="/" />
      </providers>
    </membership>
    <profile>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="/" />
      </providers>
    </profile>
    <roleManager enabled="true">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices" applicationName="/" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add applicationName="/" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </roleManager>
    <!--
      The <customErrors> section enables configuration 
      of what to do if/when an unhandled error occurs 
      during the execution of a request. Specifically, 
      it enables developers to configure html error pages 
      to be displayed in place of a error stack trace.

    <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
      <error statusCode="403" redirect="NoAccess.htm" />
      <error statusCode="404" redirect="FileNotFound.htm" />
    </customErrors>
  -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
      </namespaces>
    </pages>
    <httpHandlers>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      <add path="glimpse.axd" verb="GET,POST" type="Glimpse.Core.Handler" />
    </httpHandlers>
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <!--<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />-->
      <!--<add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah"/>-->
      <!--<add name="ErrorTweet" type="Elmah.ErrorTweetModule, Elmah"/>-->
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
      <add name="Glimpse" type="Glimpse.Core.Module" />
    </httpModules>
    <trace writeToDiagnosticsTrace="true" enabled="true" pageOutput="false" />
  </system.web>
  <!-- 
    The system.webServer section is required for running ASP.NET AJAX under Internet
    Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorTweet" type="Elmah.ErrorTweetModule, Elmah" preCondition="managedHandler" />
      <add name="Glimpse" type="Glimpse.Core.Module,Glimpse.Core" preCondition="integratedMode" />
    </modules>
    <handlers>
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="MvcScriptMap" preCondition="classicMode" verb="*" path="*.mvc" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" />
      <add name="Elmah" path="elmah.axd" verb="POST,GET,HEAD" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      <add name="Glimpse" path="glimpse.axd" verb="GET,POST" type="Glimpse.Core.Handler,Glimpse.Core" preCondition="integratedMode" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Abstractions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Routing" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="PagedList" publicKeyToken="abbb863e9397c5e1" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.15.0.0" newVersion="1.15.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <location path="elmah.axd" inheritInChildApplications="false">
    <system.web>
      <httpHandlers>
        <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      </httpHandlers>
      <!-- 
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on using ASP.NET authorization securing ELMAH.

      <authorization>
        <allow roles="admin" />
        <deny users="*" />  
      </authorization>
      -->
    </system.web>
    <system.webServer>
      <handlers>
        <add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      </handlers>
    </system.webServer>
  </location>
  <glimpse enabled="true" />
</configuration>
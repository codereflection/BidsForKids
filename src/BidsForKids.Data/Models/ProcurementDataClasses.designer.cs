using System.Diagnostics;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BidsForKids.Data.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BidsForKids")]
	public partial class ProcurementDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuction(Auction instance);
    partial void UpdateAuction(Auction instance);
    partial void DeleteAuction(Auction instance);
    partial void InsertContactProcurement(ContactProcurement instance);
    partial void UpdateContactProcurement(ContactProcurement instance);
    partial void DeleteContactProcurement(ContactProcurement instance);
    partial void InsertProcurement(Procurement instance);
    partial void UpdateProcurement(Procurement instance);
    partial void DeleteProcurement(Procurement instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertGeoLocation(GeoLocation instance);
    partial void UpdateGeoLocation(GeoLocation instance);
    partial void DeleteGeoLocation(GeoLocation instance);
    partial void InsertDonor(Donor instance);
    partial void UpdateDonor(Donor instance);
    partial void DeleteDonor(Donor instance);
    partial void InsertProcurer(Procurer instance);
    partial void UpdateProcurer(Procurer instance);
    partial void DeleteProcurer(Procurer instance);
    partial void InsertDonorType(DonorType instance);
    partial void UpdateDonorType(DonorType instance);
    partial void DeleteDonorType(DonorType instance);
    partial void InsertProcurementType(ProcurementType instance);
    partial void UpdateProcurementType(ProcurementType instance);
    partial void DeleteProcurementType(ProcurementType instance);
    #endregion
		
		public ProcurementDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BidsForKidsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProcurementDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
            OnCreated();
		}
		
		public ProcurementDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcurementDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcurementDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auction> Auctions
		{
			get
			{
				return this.GetTable<Auction>();
			}
		}
		
		public System.Data.Linq.Table<ContactProcurement> ContactProcurements
		{
			get
			{
				return this.GetTable<ContactProcurement>();
			}
		}
		
		public System.Data.Linq.Table<Procurement> Procurements
		{
			get
			{
				return this.GetTable<Procurement>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<GeoLocation> GeoLocations
		{
			get
			{
				return this.GetTable<GeoLocation>();
			}
		}
		
		public System.Data.Linq.Table<Donor> Donors
		{
			get
			{
				return this.GetTable<Donor>();
			}
		}
		
		public System.Data.Linq.Table<Procurer> Procurers
		{
			get
			{
				return this.GetTable<Procurer>();
			}
		}
		
		public System.Data.Linq.Table<DonatesReference> DonatesReferences
		{
			get
			{
				return this.GetTable<DonatesReference>();
			}
		}
		
		public System.Data.Linq.Table<DonorType> DonorTypes
		{
			get
			{
				return this.GetTable<DonorType>();
			}
		}
		
		public System.Data.Linq.Table<ProcurementType> ProcurementTypes
		{
			get
			{
				return this.GetTable<ProcurementType>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BackupDatabase")]
		public int BackupDatabase([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackupFileLocation", DbType="VarChar(1024)")] string backupFileLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), backupFileLocation);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auction")]
	public partial class Auction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Auction_ID;
		
		private int _Year;
		
		private string _Name;
		
		private EntitySet<ContactProcurement> _ContactProcurements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuction_IDChanging(int value);
    partial void OnAuction_IDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Auction()
		{
			this._ContactProcurements = new EntitySet<ContactProcurement>(new Action<ContactProcurement>(this.attach_ContactProcurements), new Action<ContactProcurement>(this.detach_ContactProcurements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auction_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Auction_ID
		{
			get
			{
				return this._Auction_ID;
			}
			set
			{
				if ((this._Auction_ID != value))
				{
					this.OnAuction_IDChanging(value);
					this.SendPropertyChanging();
					this._Auction_ID = value;
					this.SendPropertyChanged("Auction_ID");
					this.OnAuction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_ContactProcurement", Storage="_ContactProcurements", ThisKey="Auction_ID", OtherKey="Auction_ID")]
		public EntitySet<ContactProcurement> ContactProcurements
		{
			get
			{
				return this._ContactProcurements;
			}
			set
			{
				this._ContactProcurements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Auction = this;
		}
		
		private void detach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Auction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactProcurement")]
	public partial class ContactProcurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactProcurement_ID;
		
		private int _Contact_ID;
		
		private int _Procurement_ID;
		
		private int _Auction_ID;
		
		private System.Nullable<int> _Procurer_ID;
		
		private EntityRef<Auction> _Auction;
		
		private EntityRef<Procurement> _Procurement;
		
		private EntityRef<Donor> _Contact;
		
		private EntityRef<Procurer> _Procurer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactProcurement_IDChanging(int value);
    partial void OnContactProcurement_IDChanged();
    partial void OnDonor_IDChanging(int value);
    partial void OnDonor_IDChanged();
    partial void OnProcurement_IDChanging(int value);
    partial void OnProcurement_IDChanged();
    partial void OnAuction_IDChanging(int value);
    partial void OnAuction_IDChanged();
    partial void OnProcurer_IDChanging(System.Nullable<int> value);
    partial void OnProcurer_IDChanged();
    #endregion
		
		public ContactProcurement()
		{
			this._Auction = default(EntityRef<Auction>);
			this._Procurement = default(EntityRef<Procurement>);
			this._Contact = default(EntityRef<Donor>);
			this._Procurer = default(EntityRef<Procurer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactProcurement_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactProcurement_ID
		{
			get
			{
				return this._ContactProcurement_ID;
			}
			set
			{
				if ((this._ContactProcurement_ID != value))
				{
					this.OnContactProcurement_IDChanging(value);
					this.SendPropertyChanging();
					this._ContactProcurement_ID = value;
					this.SendPropertyChanged("ContactProcurement_ID");
					this.OnContactProcurement_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_ID", DbType="Int NOT NULL")]
		public int Donor_ID
		{
			get
			{
				return this._Contact_ID;
			}
			set
			{
				if ((this._Contact_ID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonor_IDChanging(value);
					this.SendPropertyChanging();
					this._Contact_ID = value;
					this.SendPropertyChanged("Donor_ID");
					this.OnDonor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procurement_ID", DbType="Int NOT NULL")]
		public int Procurement_ID
		{
			get
			{
				return this._Procurement_ID;
			}
			set
			{
				if ((this._Procurement_ID != value))
				{
					if (this._Procurement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcurement_IDChanging(value);
					this.SendPropertyChanging();
					this._Procurement_ID = value;
					this.SendPropertyChanged("Procurement_ID");
					this.OnProcurement_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auction_ID", DbType="Int NOT NULL")]
		public int Auction_ID
		{
			get
			{
				return this._Auction_ID;
			}
			set
			{
				if ((this._Auction_ID != value))
				{
					if (this._Auction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuction_IDChanging(value);
					this.SendPropertyChanging();
					this._Auction_ID = value;
					this.SendPropertyChanged("Auction_ID");
					this.OnAuction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procurer_ID", DbType="Int")]
		public System.Nullable<int> Procurer_ID
		{
			get
			{
				return this._Procurer_ID;
			}
			set
			{
				if ((this._Procurer_ID != value))
				{
					if (this._Procurer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcurer_IDChanging(value);
					this.SendPropertyChanging();
					this._Procurer_ID = value;
					this.SendPropertyChanged("Procurer_ID");
					this.OnProcurer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_ContactProcurement", Storage="_Auction", ThisKey="Auction_ID", OtherKey="Auction_ID", IsForeignKey=true)]
		public Auction Auction
		{
			get
			{
				return this._Auction.Entity;
			}
			set
			{
				Auction previousValue = this._Auction.Entity;
				if (((previousValue != value) 
							|| (this._Auction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auction.Entity = null;
						previousValue.ContactProcurements.Remove(this);
					}
					this._Auction.Entity = value;
					if ((value != null))
					{
						value.ContactProcurements.Add(this);
						this._Auction_ID = value.Auction_ID;
					}
					else
					{
						this._Auction_ID = default(int);
					}
					this.SendPropertyChanged("Auction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurement_ContactProcurement", Storage="_Procurement", ThisKey="Procurement_ID", OtherKey="Procurement_ID", IsForeignKey=true)]
		public Procurement Procurement
		{
			get
			{
				return this._Procurement.Entity;
			}
			set
			{
				Procurement previousValue = this._Procurement.Entity;
				if (((previousValue != value) 
							|| (this._Procurement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Procurement.Entity = null;
						previousValue.ContactProcurement = null;
					}
					this._Procurement.Entity = value;
					if ((value != null))
					{
						value.ContactProcurement = this;
						this._Procurement_ID = value.Procurement_ID;
					}
					else
					{
						this._Procurement_ID = default(int);
					}
					this.SendPropertyChanged("Procurement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donor_ContactProcurement", Storage="_Contact", ThisKey="Donor_ID", OtherKey="Donor_ID", IsForeignKey=true)]
		public Donor Donor
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Donor previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactProcurements.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactProcurements.Add(this);
						this._Contact_ID = value.Donor_ID;
					}
					else
					{
						this._Contact_ID = default(int);
					}
					this.SendPropertyChanged("Donor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurer_ContactProcurement", Storage="_Procurer", ThisKey="Procurer_ID", OtherKey="Procurer_ID", IsForeignKey=true)]
		public Procurer Procurer
		{
			get
			{
				return this._Procurer.Entity;
			}
			set
			{
				Procurer previousValue = this._Procurer.Entity;
				if (((previousValue != value) 
							|| (this._Procurer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Procurer.Entity = null;
						previousValue.ContactProcurements.Remove(this);
					}
					this._Procurer.Entity = value;
					if ((value != null))
					{
						value.ContactProcurements.Add(this);
						this._Procurer_ID = value.Procurer_ID;
					}
					else
					{
						this._Procurer_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Procurer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procurement")]
	public partial class Procurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Procurement_ID;
		
		private string _Description;
		
		private System.Nullable<double> _Quantity;
		
		private System.Nullable<decimal> _PerItemValue;
		
		private string _Notes;
		
		private string _CatalogNumber;
		
		private string _AuctionNumber;
		
		private string _ItemNumber;
		
		private System.Nullable<decimal> _EstimatedValue;
		
		private System.Nullable<decimal> _SoldFor;
		
		private System.Nullable<int> _Category_ID;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _Donation;
		
		private System.Nullable<bool> _ThankYouLetterSent;
		
		private string _Limitations;
		
		private string _Certificate;
		
		private System.Nullable<int> _ProcurementType_ID;
		
		private EntityRef<ContactProcurement> _ContactProcurements;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<ProcurementType> _ProcurementType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcurement_IDChanging(int value);
    partial void OnProcurement_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnPerItemValueChanging(System.Nullable<decimal> value);
    partial void OnPerItemValueChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCatalogNumberChanging(string value);
    partial void OnCatalogNumberChanged();
    partial void OnAuctionNumberChanging(string value);
    partial void OnAuctionNumberChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnEstimatedValueChanging(System.Nullable<decimal> value);
    partial void OnEstimatedValueChanged();
    partial void OnSoldForChanging(System.Nullable<decimal> value);
    partial void OnSoldForChanged();
    partial void OnCategory_IDChanging(System.Nullable<int> value);
    partial void OnCategory_IDChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnDonationChanging(string value);
    partial void OnDonationChanged();
    partial void OnThankYouLetterSentChanging(System.Nullable<bool> value);
    partial void OnThankYouLetterSentChanged();
    partial void OnLimitationsChanging(string value);
    partial void OnLimitationsChanged();
    partial void OnCertificateChanging(string value);
    partial void OnCertificateChanged();
    partial void OnProcurementType_IDChanging(System.Nullable<int> value);
    partial void OnProcurementType_IDChanged();
    #endregion
		
		public Procurement()
		{
			this._ContactProcurements = default(EntityRef<ContactProcurement>);
			this._Category = default(EntityRef<Category>);
			this._ProcurementType = default(EntityRef<ProcurementType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procurement_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Procurement_ID
		{
			get
			{
				return this._Procurement_ID;
			}
			set
			{
				if ((this._Procurement_ID != value))
				{
					this.OnProcurement_IDChanging(value);
					this.SendPropertyChanging();
					this._Procurement_ID = value;
					this.SendPropertyChanged("Procurement_ID");
					this.OnProcurement_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerItemValue", DbType="Money")]
		public System.Nullable<decimal> PerItemValue
		{
			get
			{
				return this._PerItemValue;
			}
			set
			{
				if ((this._PerItemValue != value))
				{
					this.OnPerItemValueChanging(value);
					this.SendPropertyChanging();
					this._PerItemValue = value;
					this.SendPropertyChanged("PerItemValue");
					this.OnPerItemValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogNumber", DbType="VarChar(20)")]
		public string CatalogNumber
		{
			get
			{
				return this._CatalogNumber;
			}
			set
			{
				if ((this._CatalogNumber != value))
				{
					this.OnCatalogNumberChanging(value);
					this.SendPropertyChanging();
					this._CatalogNumber = value;
					this.SendPropertyChanged("CatalogNumber");
					this.OnCatalogNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionNumber", DbType="VarChar(20)")]
		public string AuctionNumber
		{
			get
			{
				return this._AuctionNumber;
			}
			set
			{
				if ((this._AuctionNumber != value))
				{
					this.OnAuctionNumberChanging(value);
					this.SendPropertyChanging();
					this._AuctionNumber = value;
					this.SendPropertyChanged("AuctionNumber");
					this.OnAuctionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="VarChar(20)")]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedValue", DbType="Money")]
		public System.Nullable<decimal> EstimatedValue
		{
			get
			{
				return this._EstimatedValue;
			}
			set
			{
				if ((this._EstimatedValue != value))
				{
					this.OnEstimatedValueChanging(value);
					this.SendPropertyChanging();
					this._EstimatedValue = value;
					this.SendPropertyChanged("EstimatedValue");
					this.OnEstimatedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldFor", DbType="Money")]
		public System.Nullable<decimal> SoldFor
		{
			get
			{
				return this._SoldFor;
			}
			set
			{
				if ((this._SoldFor != value))
				{
					this.OnSoldForChanging(value);
					this.SendPropertyChanging();
					this._SoldFor = value;
					this.SendPropertyChanged("SoldFor");
					this.OnSoldForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int")]
		public System.Nullable<int> Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="datetime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="datetime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donation", DbType="VarChar(2000)")]
		public string Donation
		{
			get
			{
				return this._Donation;
			}
			set
			{
				if ((this._Donation != value))
				{
					this.OnDonationChanging(value);
					this.SendPropertyChanging();
					this._Donation = value;
					this.SendPropertyChanged("Donation");
					this.OnDonationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThankYouLetterSent", DbType="Bit")]
		public System.Nullable<bool> ThankYouLetterSent
		{
			get
			{
				return this._ThankYouLetterSent;
			}
			set
			{
				if ((this._ThankYouLetterSent != value))
				{
					this.OnThankYouLetterSentChanging(value);
					this.SendPropertyChanging();
					this._ThankYouLetterSent = value;
					this.SendPropertyChanged("ThankYouLetterSent");
					this.OnThankYouLetterSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limitations", DbType="VarChar(500)")]
		public string Limitations
		{
			get
			{
				return this._Limitations;
			}
			set
			{
				if ((this._Limitations != value))
				{
					this.OnLimitationsChanging(value);
					this.SendPropertyChanging();
					this._Limitations = value;
					this.SendPropertyChanged("Limitations");
					this.OnLimitationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate", DbType="VarChar(10)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this.OnCertificateChanging(value);
					this.SendPropertyChanging();
					this._Certificate = value;
					this.SendPropertyChanged("Certificate");
					this.OnCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcurementType_ID", DbType="int")]
		public System.Nullable<int> ProcurementType_ID
		{
			get
			{
				return this._ProcurementType_ID;
			}
			set
			{
				if ((this._ProcurementType_ID != value))
				{
					if (this._ProcurementType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcurementType_IDChanging(value);
					this.SendPropertyChanging();
					this._ProcurementType_ID = value;
					this.SendPropertyChanged("ProcurementType_ID");
					this.OnProcurementType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurement_ContactProcurement", Storage="_ContactProcurements", ThisKey="Procurement_ID", OtherKey="Procurement_ID", IsUnique=true, IsForeignKey=false)]
		public ContactProcurement ContactProcurement
		{
			get
			{
				return this._ContactProcurements.Entity;
			}
			set
			{
				ContactProcurement previousValue = this._ContactProcurements.Entity;
				if (((previousValue != value) 
							|| (this._ContactProcurements.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactProcurements.Entity = null;
						previousValue.Procurement = null;
					}
					this._ContactProcurements.Entity = value;
					if ((value != null))
					{
						value.Procurement = this;
					}
					this.SendPropertyChanged("ContactProcurement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Procurement", Storage="_Category", ThisKey="Category_ID", OtherKey="Category_ID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Procurements.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Procurements.Add(this);
						this._Category_ID = value.Category_ID;
					}
					else
					{
						this._Category_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcurementType_Procurement", Storage="_ProcurementType", ThisKey="ProcurementType_ID", OtherKey="ProcurementType_ID", IsForeignKey=true)]
		public ProcurementType ProcurementType
		{
			get
			{
				return this._ProcurementType.Entity;
			}
			set
			{
				ProcurementType previousValue = this._ProcurementType.Entity;
				if (((previousValue != value) 
							|| (this._ProcurementType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcurementType.Entity = null;
						previousValue.Procurements.Remove(this);
					}
					this._ProcurementType.Entity = value;
					if ((value != null))
					{
						value.Procurements.Add(this);
						this._ProcurementType_ID = value.ProcurementType_ID;
					}
					else
					{
						this._ProcurementType_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProcurementType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_ID;
		
		private string _CategoryName;
		
		private string _Description;
		
		private EntitySet<Procurement> _Procurements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Category()
		{
			this._Procurements = new EntitySet<Procurement>(new Action<Procurement>(this.attach_Procurements), new Action<Procurement>(this.detach_Procurements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Procurement", Storage="_Procurements", ThisKey="Category_ID", OtherKey="Category_ID")]
		public EntitySet<Procurement> Procurements
		{
			get
			{
				return this._Procurements;
			}
			set
			{
				this._Procurements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Procurements(Procurement entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Procurements(Procurement entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoLocation")]
	public partial class GeoLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeoLocation_ID;
		
		private string _GeoLocationName;
		
		private string _Description;
		
		private EntitySet<Donor> _Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeoLocation_IDChanging(int value);
    partial void OnGeoLocation_IDChanged();
    partial void OnGeoLocationNameChanging(string value);
    partial void OnGeoLocationNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public GeoLocation()
		{
			this._Contacts = new EntitySet<Donor>(new Action<Donor>(this.attach_Contacts), new Action<Donor>(this.detach_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoLocation_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GeoLocation_ID
		{
			get
			{
				return this._GeoLocation_ID;
			}
			set
			{
				if ((this._GeoLocation_ID != value))
				{
					this.OnGeoLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._GeoLocation_ID = value;
					this.SendPropertyChanged("GeoLocation_ID");
					this.OnGeoLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoLocationName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GeoLocationName
		{
			get
			{
				return this._GeoLocationName;
			}
			set
			{
				if ((this._GeoLocationName != value))
				{
					this.OnGeoLocationNameChanging(value);
					this.SendPropertyChanging();
					this._GeoLocationName = value;
					this.SendPropertyChanged("GeoLocationName");
					this.OnGeoLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoLocation_Donor", Storage="_Contacts", ThisKey="GeoLocation_ID", OtherKey="GeoLocation_ID")]
		public EntitySet<Donor> Donors
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Donor entity)
		{
			this.SendPropertyChanging();
			entity.GeoLocation = this;
		}
		
		private void detach_Contacts(Donor entity)
		{
			this.SendPropertyChanging();
			entity.GeoLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donor")]
	public partial class Donor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Contact_ID;
		
		private string _BusinessName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Phone1;
		
		private string _Phone1Desc;
		
		private string _Phone2;
		
		private string _Phone2Desc;
		
		private string _Phone3;
		
		private string _Phone3Desc;
		
		private string _Notes;
		
		private string _Website;
		
		private string _Email;
		
		private System.Nullable<int> _GeoLocation_ID;
		
		private System.Nullable<int> _Donates;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _MailedPacket;
		
		private System.Nullable<int> _Procurer_ID;
		
		private System.Nullable<int> _DonorType_ID;
		
		private EntitySet<ContactProcurement> _ContactProcurements;
		
		private EntityRef<GeoLocation> _GeoLocation;
		
		private EntityRef<Procurer> _Procurer;
		
		private EntityRef<DonorType> _DonorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonor_IDChanging(int value);
    partial void OnDonor_IDChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone1DescChanging(string value);
    partial void OnPhone1DescChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone2DescChanging(string value);
    partial void OnPhone2DescChanged();
    partial void OnPhone3Changing(string value);
    partial void OnPhone3Changed();
    partial void OnPhone3DescChanging(string value);
    partial void OnPhone3DescChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGeoLocation_IDChanging(System.Nullable<int> value);
    partial void OnGeoLocation_IDChanged();
    partial void OnDonatesChanging(System.Nullable<int> value);
    partial void OnDonatesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnMailedPacketChanging(System.Nullable<bool> value);
    partial void OnMailedPacketChanged();
    partial void OnProcurer_IDChanging(System.Nullable<int> value);
    partial void OnProcurer_IDChanged();
    partial void OnDonorType_IDChanging(System.Nullable<int> value);
    partial void OnDonorType_IDChanged();
    #endregion
		
		public Donor()
		{
			this._ContactProcurements = new EntitySet<ContactProcurement>(new Action<ContactProcurement>(this.attach_ContactProcurements), new Action<ContactProcurement>(this.detach_ContactProcurements));
			this._GeoLocation = default(EntityRef<GeoLocation>);
			this._Procurer = default(EntityRef<Procurer>);
			this._DonorType = default(EntityRef<DonorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Donor_ID
		{
			get
			{
				return this._Contact_ID;
			}
			set
			{
				if ((this._Contact_ID != value))
				{
					this.OnDonor_IDChanging(value);
					this.SendPropertyChanging();
					this._Contact_ID = value;
					this.SendPropertyChanged("Donor_ID");
					this.OnDonor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="VarChar(255)")]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1Desc", DbType="VarChar(10)")]
		public string Phone1Desc
		{
			get
			{
				return this._Phone1Desc;
			}
			set
			{
				if ((this._Phone1Desc != value))
				{
					this.OnPhone1DescChanging(value);
					this.SendPropertyChanging();
					this._Phone1Desc = value;
					this.SendPropertyChanged("Phone1Desc");
					this.OnPhone1DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2Desc", DbType="VarChar(10)")]
		public string Phone2Desc
		{
			get
			{
				return this._Phone2Desc;
			}
			set
			{
				if ((this._Phone2Desc != value))
				{
					this.OnPhone2DescChanging(value);
					this.SendPropertyChanging();
					this._Phone2Desc = value;
					this.SendPropertyChanged("Phone2Desc");
					this.OnPhone2DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3", DbType="VarChar(20)")]
		public string Phone3
		{
			get
			{
				return this._Phone3;
			}
			set
			{
				if ((this._Phone3 != value))
				{
					this.OnPhone3Changing(value);
					this.SendPropertyChanging();
					this._Phone3 = value;
					this.SendPropertyChanged("Phone3");
					this.OnPhone3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3Desc", DbType="VarChar(10)")]
		public string Phone3Desc
		{
			get
			{
				return this._Phone3Desc;
			}
			set
			{
				if ((this._Phone3Desc != value))
				{
					this.OnPhone3DescChanging(value);
					this.SendPropertyChanging();
					this._Phone3Desc = value;
					this.SendPropertyChanged("Phone3Desc");
					this.OnPhone3DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(1024)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoLocation_ID", DbType="Int")]
		public System.Nullable<int> GeoLocation_ID
		{
			get
			{
				return this._GeoLocation_ID;
			}
			set
			{
				if ((this._GeoLocation_ID != value))
				{
					if (this._GeoLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeoLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._GeoLocation_ID = value;
					this.SendPropertyChanged("GeoLocation_ID");
					this.OnGeoLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donates", DbType="tinyint")]
		public System.Nullable<int> Donates
		{
			get
			{
				return this._Donates;
			}
			set
			{
				if ((this._Donates != value))
				{
					this.OnDonatesChanging(value);
					this.SendPropertyChanging();
					this._Donates = value;
					this.SendPropertyChanged("Donates");
					this.OnDonatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="datetime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="datetime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailedPacket", DbType="bit")]
		public System.Nullable<bool> MailedPacket
		{
			get
			{
				return this._MailedPacket;
			}
			set
			{
				if ((this._MailedPacket != value))
				{
					this.OnMailedPacketChanging(value);
					this.SendPropertyChanging();
					this._MailedPacket = value;
					this.SendPropertyChanged("MailedPacket");
					this.OnMailedPacketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procurer_ID", DbType="int")]
		public System.Nullable<int> Procurer_ID
		{
			get
			{
				return this._Procurer_ID;
			}
			set
			{
				if ((this._Procurer_ID != value))
				{
					if (this._Procurer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcurer_IDChanging(value);
					this.SendPropertyChanging();
					this._Procurer_ID = value;
					this.SendPropertyChanged("Procurer_ID");
					this.OnProcurer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonorType_ID", DbType="int")]
		public System.Nullable<int> DonorType_ID
		{
			get
			{
				return this._DonorType_ID;
			}
			set
			{
				if ((this._DonorType_ID != value))
				{
					if (this._DonorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonorType_IDChanging(value);
					this.SendPropertyChanging();
					this._DonorType_ID = value;
					this.SendPropertyChanged("DonorType_ID");
					this.OnDonorType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donor_ContactProcurement", Storage="_ContactProcurements", ThisKey="Donor_ID", OtherKey="Donor_ID")]
		public EntitySet<ContactProcurement> ContactProcurements
		{
			get
			{
				return this._ContactProcurements;
			}
			set
			{
				this._ContactProcurements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoLocation_Donor", Storage="_GeoLocation", ThisKey="GeoLocation_ID", OtherKey="GeoLocation_ID", IsForeignKey=true)]
		public GeoLocation GeoLocation
		{
			get
			{
				return this._GeoLocation.Entity;
			}
			set
			{
				GeoLocation previousValue = this._GeoLocation.Entity;
				if (((previousValue != value) 
							|| (this._GeoLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoLocation.Entity = null;
						previousValue.Donors.Remove(this);
					}
					this._GeoLocation.Entity = value;
					if ((value != null))
					{
						value.Donors.Add(this);
						this._GeoLocation_ID = value.GeoLocation_ID;
					}
					else
					{
						this._GeoLocation_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GeoLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurer_Donor", Storage="_Procurer", ThisKey="Procurer_ID", OtherKey="Procurer_ID", IsForeignKey=true)]
		public Procurer Procurer
		{
			get
			{
				return this._Procurer.Entity;
			}
			set
			{
				Procurer previousValue = this._Procurer.Entity;
				if (((previousValue != value) 
							|| (this._Procurer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Procurer.Entity = null;
						previousValue.Donors.Remove(this);
					}
					this._Procurer.Entity = value;
					if ((value != null))
					{
						value.Donors.Add(this);
						this._Procurer_ID = value.Procurer_ID;
					}
					else
					{
						this._Procurer_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Procurer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonorType_Donor", Storage="_DonorType", ThisKey="DonorType_ID", OtherKey="DonorType_ID", IsForeignKey=true)]
		public DonorType DonorType
		{
			get
			{
				return this._DonorType.Entity;
			}
			set
			{
				DonorType previousValue = this._DonorType.Entity;
				if (((previousValue != value) 
							|| (this._DonorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonorType.Entity = null;
						previousValue.Donors.Remove(this);
					}
					this._DonorType.Entity = value;
					if ((value != null))
					{
						value.Donors.Add(this);
						this._DonorType_ID = value.DonorType_ID;
					}
					else
					{
						this._DonorType_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Donor = this;
		}
		
		private void detach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Donor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procurer")]
	public partial class Procurer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Procurer_ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Description;
		
		private EntitySet<ContactProcurement> _ContactProcurements;
		
		private EntitySet<Donor> _Donors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcurer_IDChanging(int value);
    partial void OnProcurer_IDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Procurer()
		{
			this._ContactProcurements = new EntitySet<ContactProcurement>(new Action<ContactProcurement>(this.attach_ContactProcurements), new Action<ContactProcurement>(this.detach_ContactProcurements));
			this._Donors = new EntitySet<Donor>(new Action<Donor>(this.attach_Donors), new Action<Donor>(this.detach_Donors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procurer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Procurer_ID
		{
			get
			{
				return this._Procurer_ID;
			}
			set
			{
				if ((this._Procurer_ID != value))
				{
					this.OnProcurer_IDChanging(value);
					this.SendPropertyChanging();
					this._Procurer_ID = value;
					this.SendPropertyChanged("Procurer_ID");
					this.OnProcurer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurer_ContactProcurement", Storage="_ContactProcurements", ThisKey="Procurer_ID", OtherKey="Procurer_ID")]
		public EntitySet<ContactProcurement> ContactProcurements
		{
			get
			{
				return this._ContactProcurements;
			}
			set
			{
				this._ContactProcurements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procurer_Donor", Storage="_Donors", ThisKey="Procurer_ID", OtherKey="Procurer_ID")]
		public EntitySet<Donor> Donors
		{
			get
			{
				return this._Donors;
			}
			set
			{
				this._Donors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Procurer = this;
		}
		
		private void detach_ContactProcurements(ContactProcurement entity)
		{
			this.SendPropertyChanging();
			entity.Procurer = null;
		}
		
		private void attach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.Procurer = this;
		}
		
		private void detach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.Procurer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donates")]
	public partial class DonatesReference
	{
		
		private System.Nullable<int> _Donates_ID;
		
		private string _Description;
		
		public DonatesReference()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donates_ID", DbType="Int")]
		public System.Nullable<int> Donates_ID
		{
			get
			{
				return this._Donates_ID;
			}
			set
			{
				if ((this._Donates_ID != value))
				{
					this._Donates_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonorType")]
	public partial class DonorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonorType_ID;
		
		private string _DonorTypeDesc;
		
		private EntitySet<Donor> _Donors;
		
		private EntitySet<ProcurementType> _ProcurementTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonorType_IDChanging(int value);
    partial void OnDonorType_IDChanged();
    partial void OnDonorTypeDescChanging(string value);
    partial void OnDonorTypeDescChanged();
    #endregion
		
		public DonorType()
		{
			this._Donors = new EntitySet<Donor>(new Action<Donor>(this.attach_Donors), new Action<Donor>(this.detach_Donors));
			this._ProcurementTypes = new EntitySet<ProcurementType>(new Action<ProcurementType>(this.attach_ProcurementTypes), new Action<ProcurementType>(this.detach_ProcurementTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonorType_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonorType_ID
		{
			get
			{
				return this._DonorType_ID;
			}
			set
			{
				if ((this._DonorType_ID != value))
				{
					this.OnDonorType_IDChanging(value);
					this.SendPropertyChanging();
					this._DonorType_ID = value;
					this.SendPropertyChanged("DonorType_ID");
					this.OnDonorType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonorTypeDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DonorTypeDesc
		{
			get
			{
				return this._DonorTypeDesc;
			}
			set
			{
				if ((this._DonorTypeDesc != value))
				{
					this.OnDonorTypeDescChanging(value);
					this.SendPropertyChanging();
					this._DonorTypeDesc = value;
					this.SendPropertyChanged("DonorTypeDesc");
					this.OnDonorTypeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonorType_Donor", Storage="_Donors", ThisKey="DonorType_ID", OtherKey="DonorType_ID")]
		public EntitySet<Donor> Donors
		{
			get
			{
				return this._Donors;
			}
			set
			{
				this._Donors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonorType_ProcurementType", Storage="_ProcurementTypes", ThisKey="DonorType_ID", OtherKey="DonorType_ID")]
		public EntitySet<ProcurementType> ProcurementTypes
		{
			get
			{
				return this._ProcurementTypes;
			}
			set
			{
				this._ProcurementTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.DonorType = this;
		}
		
		private void detach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.DonorType = null;
		}
		
		private void attach_ProcurementTypes(ProcurementType entity)
		{
			this.SendPropertyChanging();
			entity.DonorType = this;
		}
		
		private void detach_ProcurementTypes(ProcurementType entity)
		{
			this.SendPropertyChanging();
			entity.DonorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcurementType")]
	public partial class ProcurementType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcurementType_ID;
		
		private string _ProcurementTypeDesc;
		
		private System.Nullable<int> _DonorType_ID;
		
		private EntitySet<Procurement> _Procurements;
		
		private EntityRef<DonorType> _DonorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcurementType_IDChanging(int value);
    partial void OnProcurementType_IDChanged();
    partial void OnProcurementTypeDescChanging(string value);
    partial void OnProcurementTypeDescChanged();
    partial void OnDonorType_IDChanging(System.Nullable<int> value);
    partial void OnDonorType_IDChanged();
    #endregion
		
		public ProcurementType()
		{
			this._Procurements = new EntitySet<Procurement>(new Action<Procurement>(this.attach_Procurements), new Action<Procurement>(this.detach_Procurements));
			this._DonorType = default(EntityRef<DonorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcurementType_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcurementType_ID
		{
			get
			{
				return this._ProcurementType_ID;
			}
			set
			{
				if ((this._ProcurementType_ID != value))
				{
					this.OnProcurementType_IDChanging(value);
					this.SendPropertyChanging();
					this._ProcurementType_ID = value;
					this.SendPropertyChanged("ProcurementType_ID");
					this.OnProcurementType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcurementTypeDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProcurementTypeDesc
		{
			get
			{
				return this._ProcurementTypeDesc;
			}
			set
			{
				if ((this._ProcurementTypeDesc != value))
				{
					this.OnProcurementTypeDescChanging(value);
					this.SendPropertyChanging();
					this._ProcurementTypeDesc = value;
					this.SendPropertyChanged("ProcurementTypeDesc");
					this.OnProcurementTypeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonorType_ID", DbType="int")]
		public System.Nullable<int> DonorType_ID
		{
			get
			{
				return this._DonorType_ID;
			}
			set
			{
				if ((this._DonorType_ID != value))
				{
					if (this._DonorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonorType_IDChanging(value);
					this.SendPropertyChanging();
					this._DonorType_ID = value;
					this.SendPropertyChanged("DonorType_ID");
					this.OnDonorType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcurementType_Procurement", Storage="_Procurements", ThisKey="ProcurementType_ID", OtherKey="ProcurementType_ID")]
		public EntitySet<Procurement> Procurements
		{
			get
			{
				return this._Procurements;
			}
			set
			{
				this._Procurements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonorType_ProcurementType", Storage="_DonorType", ThisKey="DonorType_ID", OtherKey="DonorType_ID", IsForeignKey=true)]
		public DonorType DonorType
		{
			get
			{
				return this._DonorType.Entity;
			}
			set
			{
				DonorType previousValue = this._DonorType.Entity;
				if (((previousValue != value) 
							|| (this._DonorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonorType.Entity = null;
						previousValue.ProcurementTypes.Remove(this);
					}
					this._DonorType.Entity = value;
					if ((value != null))
					{
						value.ProcurementTypes.Add(this);
						this._DonorType_ID = value.DonorType_ID;
					}
					else
					{
						this._DonorType_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Procurements(Procurement entity)
		{
			this.SendPropertyChanging();
			entity.ProcurementType = this;
		}
		
		private void detach_Procurements(Procurement entity)
		{
			this.SendPropertyChanging();
			entity.ProcurementType = null;
		}
	}
}
#pragma warning restore 1591
